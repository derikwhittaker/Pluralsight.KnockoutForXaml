var ToDo;(function(n){var t=function(){function n(n){this.Parent=undefined,this.OriginalToDoModel=ko.observable(),this.Id=ko.observable(0),this.Task=ko.observable(""),this.DueDate=ko.observable(),this.ReminderDate=ko.observable(),this.Priorities=ko.observableArray(),this.SelectedPriority=ko.observable(),this.Categories=ko.observableArray(),this.SelectedCategory=ko.observable(),this.Statuses=ko.observableArray(),this.SelectedStatus=ko.observable(),this.remoteCallCounter=0,this.totalRemoteCallsExpected=3,this.Id(n),$("#dueDatePicker").datepicker(),$("#reminderDatePicker").datepicker(),this.setupValidation()}return n.prototype.updateRemoteCallCounter=function(){this.remoteCallCounter++,this.remoteCallCounter==this.totalRemoteCallsExpected&&this.fetchToDoItem()},n.prototype.setupValidation=function(){var n=this,t=this;ko.validation.init(),this.Task.extend({required:!0}),this.DueDate.extend({date:!0}),this.DueDate.extend({validation:{validator:function(n){if(n==undefined)return!0;var t=moment(n),i=t.diff(moment(),"days");return i>=0},message:"Date cannot be in the past"}}),this.ReminderDate.extend({validation:{validator:function(n){if(n==undefined)return!0;var i=moment(n),r=moment(t.DueDate()),u=i.diff(r,"days");return u<=0},message:"Reminder Date must be before Due Date"}}),this.IsValid=ko.computed(function(){var t=n.Task.isValid(),i=n.DueDate.isValid(),r=n.ReminderDate.isValid();return t&&i&&r})},n.prototype.fetchData=function(){this.remoteCallCounter=0,this.fetchCategories(),this.fetchPriorities(),this.fetchStatuses()},n.prototype.fetchToDoItem=function(){var n=this,t="http://localhost:8888/ToDoServices/api/todo/get/"+this.Id();$.get(t).done(function(t){n.OriginalToDoModel(ko.mapping.fromJS(t)),n.Task(t.Task),n.DueDate(moment(t.DueDate).format("MM/DD/YYYY")),n.SelectedCategory(ko.mapping.fromJS(t.Category)),t.ReminderDate&&n.ReminderDate(moment(t.ReminderDate).format("MM/DD/YYYY"))}).fail(function(n){console.error(n.statusText)})},n.prototype.fetchCategories=function(){var n=this;$.get("http://localhost:8888/ToDoServices/api/Meta/Categories").done(function(t){n.updateRemoteCallCounter(),n.Categories(t)})},n.prototype.fetchPriorities=function(){var n=this;$.get("http://localhost:8888/ToDoServices/api/Meta/Priorities").done(function(t){n.updateRemoteCallCounter(),n.Priorities(t)})},n.prototype.fetchStatuses=function(){var n=this;$.get("http://localhost:8888/ToDoServices/api/Meta/Statuses").done(function(t){n.updateRemoteCallCounter(),n.Statuses(t)})},n.prototype.saveToDo=function(){var n=this,t={Id:n.Id(),Task:n.Task(),DueDate:n.DueDate(),ReminderDate:n.ReminderDate(),Category:ko.toJS(n.SelectedCategory),Priority:ko.toJS(n.SelectedPriority),Status:ko.toJS(n.SelectedStatus)};$.post("http://localhost:8888/ToDoServices/api/ToDo/Update",t).done(function(){$("#todo-edit-modal").modal("hide")})},n}();n.MaintainItemViewModel=t})(ToDo||(ToDo={}))