<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:converters="clr-namespace:ToDo.Xaml.Converters" xmlns:sys="clr-namespace:System;assembly=mscorlib">
    
    <converters:StateToEllipseConverter x:Key="StateToEllipseConverter" />
    <converters:BooleanToVisibilityConverter x:Key="b2v" />

    <FontFamily x:Key="PrimaryFont">Calibri</FontFamily>
    
    <Color x:Key="ActiveColor">#C8D101</Color>
    <Color x:Key="OverdueColor">#BB3818</Color>
    <Color x:Key="CompletedColor">#ADC1C8</Color>
    <Color x:Key="AlertColor" >#C04628</Color>
    <Color x:Key="GlowColor">#D1DE56</Color>
    <Color x:Key="GrayColor">#FF7f7f7f</Color>
    <Color x:Key="DarkGrayColor">#666666</Color>
    <Color x:Key="ContentControlBorderColor" >#FFC8CDD1</Color>


    <SolidColorBrush x:Key="PrimaryFontBrush" Color="{StaticResource GrayColor}" />
    <SolidColorBrush x:Key="SmallFontColorBrush" Color="{StaticResource DarkGrayColor}" />
    <SolidColorBrush x:Key="AlertColorBrush" Color="{StaticResource AlertColor}" />
    <SolidColorBrush x:Key="ActiveBrush" Color="{StaticResource ActiveColor}" />
    <SolidColorBrush x:Key="OverdueBrush" Color="{StaticResource OverdueColor}" />
    <SolidColorBrush x:Key="CompletedBrush" Color="{StaticResource CompletedColor}" />

    <SolidColorBrush x:Key="ControlBorderColorBrush" Color="{StaticResource ContentControlBorderColor}" />
    <LinearGradientBrush x:Key="ControlCutoutBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#E9E9E9" Offset="0"/>
        <GradientStop Color="#F4F4F4" Offset="0.1" />
        <GradientStop Color="White" Offset="0.5" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlCutoutBorderMouseOverBrush" Color="{StaticResource GlowColor}" />
    <LinearGradientBrush x:Key="ControlCutoutBackgroundReadOnlyBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#E9E9E9" Offset="0"/>
        <GradientStop Color="#F4F4F4" Offset="0.1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ControlCutoutFocusOuterGlowBrush" Color="{StaticResource GlowColor}" />
    <SolidColorBrush x:Key="GrayTextBrush" Color="{StaticResource GrayColor}" />

    <Style x:Key="ActiveStatusElipseStyle" TargetType="Ellipse">
        <Setter Property="Fill" Value="{StaticResource ActiveBrush}" />
        <Setter Property="Stroke" Value="{StaticResource ActiveBrush}" />
        <Setter Property="StrokeThickness" Value=".5" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Width" Value="10" />
    </Style>

    <Style x:Key="OverdueStatusElipseStyle" TargetType="Ellipse">
        <Setter Property="Fill" Value="{StaticResource OverdueBrush}" />
        <Setter Property="Stroke" Value="{StaticResource OverdueBrush}" />
        <Setter Property="StrokeThickness" Value=".5" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Width" Value="10" />
    </Style>

    <Style x:Key="CompletedStatusElipseStyle" TargetType="Ellipse">
        <Setter Property="Fill" Value="{StaticResource CompletedBrush}" />
        <Setter Property="Stroke" Value="{StaticResource CompletedBrush}" />
        <Setter Property="StrokeThickness" Value=".5" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Width" Value="10" />
    </Style>
    
    <Style x:Key="GridNormalTextStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{StaticResource GrayTextBrush}" />
        <Setter Property="FontSize" Value="11" />
    </Style>
    
    <!-- Control Styles -->

    <ControlTemplate x:Key="ControlValidationToolTipTemplate">
        <Grid x:Name="Root" Margin="5,0" RenderTransformOrigin="0,0" Opacity="0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform" X="-25"/>
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0"/>
                        <VisualTransition To="Open" GeneratedDuration="0:0:0.2">
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0:0:0.2">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3" EasingMode="EaseOut"/>
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="xform" Storyboard.TargetProperty="X" To="0" Duration="0"/>
                            <DoubleAnimation Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Border Margin="4,4,-4,-4" Background="#052A2E31" CornerRadius="5"/>
            <Border Margin="3,3,-3,-3" Background="#152A2E31" CornerRadius="4"/>
            <Border Margin="2,2,-2,-2" Background="#252A2E31" CornerRadius="3"/>
            <Border Margin="1,1,-1,-1" Background="#352A2E31" CornerRadius="2"/>

            <Border Background="{StaticResource AlertColorBrush}" CornerRadius="2"/>
            <Border CornerRadius="2">
                <TextBlock 
                  UseLayoutRounding="false" 
                  Foreground="White" Margin="8,4,8,4" MaxWidth="250" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}"/>
            </Border>
        </Grid>
    </ControlTemplate>
    
    <Style x:Key="WatermarkedTextBoxStyle" TargetType="TextBox">
        <Setter Property="Height" Value="25" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="Padding" Value="4,2,2,2"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFont}" />
        <Setter Property="Foreground" Value="{StaticResource SmallFontColorBrush}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource ControlBorderColorBrush}" />
        <Setter Property="Background" Value="{StaticResource ControlCutoutBackgroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlCutoutBorderMouseOverBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ControlCutoutBackgroundReadOnlyBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard Duration="0">
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusBorder" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid"/>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusBorder" Storyboard.TargetProperty="Opacity">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AlertColorBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="FocusBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AlertColorBrush}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="FocusBorder" BorderBrush="{StaticResource ControlCutoutFocusOuterGlowBrush}" BorderThickness="2" 
                                CornerRadius="6" Opacity="0" Background="{StaticResource ControlCutoutFocusOuterGlowBrush}"
                                Margin="-2"
                                />
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="4" Opacity="1">
                            <Grid>
                                <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                            />
                                <TextBlock x:Name="Watermark" Text="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}" 
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Visibility="{Binding IsWatermarkVisible, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource b2v}, FallbackValue=false}"
                                            FontStyle="Italic" FontFamily="{StaticResource PrimaryFont}" Foreground="{StaticResource PrimaryFontBrush}" FontSize="12"  
                                            />
                            </Grid>
                        </Border>
                        <Rectangle x:Name="DisabledVisualElement" Fill="White" IsHitTestVisible="false" Opacity="0" RadiusY="4" RadiusX="4"/>
                        <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource AlertColorBrush}" BorderThickness="1" CornerRadius="4" Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip" Template="{StaticResource ControlValidationToolTipTemplate}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" >
                                    <ToolTip.Triggers>
                                        <EventTrigger RoutedEvent="Canvas.Loaded">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                            <DiscreteObjectKeyFrame.Value>
                                                                <sys:Boolean>true</sys:Boolean>
                                                            </DiscreteObjectKeyFrame.Value>
                                                        </DiscreteObjectKeyFrame>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </ToolTip.Triggers>
                                </ToolTip>
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="0,-2,-2,0" VerticalAlignment="Top" Width="12">
                                <Ellipse Height="12" Width="12" Fill="White" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
